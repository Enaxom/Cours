#!/bin/bash

VERBOSE=False

BASEDIR=$PWD
BRCTL=/sbin/brctl
BRIDGE=/sbin/bridge
CHMOD=/bin/chmod
CP=/bin/cp
IP=/sbin/ip
KILL=/bin/kill
MKFIFO=/usr/bin/mkfifo
MKDIR=/bin/mkdir
RM=/bin/rm
TOUCH=/usr/bin/touch
TRUE=/bin/true

if [ $UID != 0 ] ; then
   echo "Il est nécessaire d'être administrateur"
   echo "Exécutez d'abord la commade sudo su"
   exit
fi

LABCONF=$BASEDIR/lab.conf
LABSTARTUP=$BASEDIR/lab.startup
LABPOSTBOOT=$BASEDIR/lab.postboot
BASHRC=./bashrc

if [ $VERBOSE == True ] ; then
  echo "* Chargement du fichier de configuration"
fi

if [ -f $LABCONF ] ; then 
   . $LABCONF
fi

analyseUnLien () {
   l=$1

   # Format h:i[:@]!h:i[:@]
   #-----------------------
   if [ $VERBOSE == True ] ; then
       echo "    Link $l ..."
   fi
   
   # Parsing source
   #---------------
   # Do not set up if name has a leading -
   doSetUp=True
   if [ "${l:0:1}" == "-" ] ; then
       doSetUp=False
       if [ $VERBOSE == True ] ; then
           echo "      Unactive"
       fi
       l=${l#*-}
       if [ $VERBOSE == True ] ; then
           echo "      Using $l"
       fi 
   else
       if [ $VERBOSE == True ] ; then
	   echo "      On active $l"
       fi
   fi

   src=`echo $l| cut -d! -f1`
   srch=`echo $src|cut -d: -f1`
   if [ -z "$srch" ] ; then
      echo "*** No source host defined in '$l'"
      exit
   fi
   srcIsBr=no
   if [ -z "`$IP netns list|grep $srch`" ] ; then
       for br in $BRIDGES
       do
	   if [ $br == $srch ] ; then
               if [ $VERBOSE == True ] ; then
	           echo "       $srch is a bridge"
	       fi
	       srcIsBr=yes
	   fi
       done
       if [ "$srcIsBr" == "no" ] ; then
	   echo "*** Unknown host '$srch'"
	   exit
       fi
   fi
   srci=`echo $src|cut -d: -f2`
   if [ -z "$srci" ] ; then
      echo "*** No source interface defined in '$l'"
      exit
   fi
   
   if [ "$srcIsBr" == "no" ] ; then
       IFLIST="$IFLIST $srch:$srci"
   fi
   srca=`echo $src|cut -d: -f3`

   # Parsing destination
   #--------------------
   dst=`echo $l| cut -d! -f2`
   dsth=`echo $dst|cut -d: -f1`
   if [ -z "$dsth" ] ; then
      echo "*** No destination host defined in '$l'"
      exit
   fi
   dstIsBr=no
   if [ -z "`$IP netns list|grep $dsth`" ] ; then
       for br in $BRIDGES
       do
	   if [ $br == $dsth ] ; then
               if [ $VERBOSE == True ] ; then
	           echo "       Dst is a bridge"
	       fi
	       dstIsBr=yes
	   fi
       done
       if [ "$dstIsBr" == "no" ] ; then
	   echo "*** Unknown host '$dsth'"
	   exit
       fi
   fi
   dsti=`echo $dst|cut -d: -f2`
   if [ -z ""$dsti -a "$dstIsBr" == "no" ] ; then
      echo "*** No destination interface defined in '$l'"
      exit
   fi
   if [ "$dstIsBr" == "no" ] ; then
       IFLIST="$IFLIST $dsth:$dsti"
   fi
   dsta=`echo $dst|cut -d: -f3`
   if [ $VERBOSE == True ] ; then
       echo "       $srch ($srci)  <-> $dsth ($dsti)"
       if [ -n "$srca" ] ; then
	   echo "       $srch : $srca"
       fi   
       if [ -n "$dsta" ] ; then
	   echo "       $dsth : $dsta"
       fi   
   fi

   # I only build links where dstIsBr or !srcIsBr
   #---------------------------------------------
   if [ "$srcIsBr" == "yes" -a "$dstIsBr" == "no" ] ; then
      echo "Forbiden bridge to host link : $l"
   fi
}

# Parse command line options
while [[ $# > 0 ]] ;
do
   case "$1" in
      -v )
         VERBOSE=True
      ;;
      * )
         echo "Option '$1' inconnue"
         exit
      ;;
   esac
   shift
done


