clear;
close all;
taille_ecran = get(0,'ScreenSize');
L = taille_ecran(3);
H = taille_ecran(4);

% Lecture et affichage de l'image :
Im = imread('maldive.jpg');
Im = Im(10:80,10:100,:);
figure('Name','Probleme du maitre-nageur','Position',[0.2*L,0,0.8*L,H]);
imagesc(Im);
axis equal;
axis off;
hold on;

% Vitesse de deplacement du maitre-nageur :
vitesse = double(rgb2gray(Im));
[nb_lignes,nb_colonnes] = size(vitesse);

% Les matrices I et J contiennent les numeros de lignes et de colonnes des pixels:
[J,I] = meshgrid(1:nb_colonnes,1:nb_lignes);

% Matrice d'adjacence M et matrice des poids P :
M = zeros(nb_lignes,nb_colonnes);
P = zeros(nb_lignes,nb_colonnes);

for i = 1:nb_lignes
    for j = 1:nb_colonnes
        M(mod(i-1,nb_lignes),mod(j-1,nb_colonnes)) = 1;
        M(mod(i+1,nb_lignes),mod(j+1,nb_colonnes)) = 1;
        M(mod(i-1,nb_lignes),mod(j+1,nb_colonnes)) = 1;
        M(mod(i+1,nb_lignes),mod(j-1,nb_colonnes)) = 1;
        M(mod(i+1,nb_lignes),mod(j,nb_colonnes)) = 1;
        M(mod(i-1,nb_lignes),mod(j,nb_colonnes)) = 1;
        M(mod(i,nb_lignes),mod(j-1,nb_colonnes)) = 1;
        M(mod(i,nb_lignes),mod(j+1,nb_colonnes)) = 1;
        
        P(mod(i-1,nb_lignes),mod(j-1,nb_colonnes)) = sqrt(2);
        P(mod(i+1,nb_lignes),mod(j+1,nb_colonnes)) = sqrt(2);
        P(mod(i-1,nb_lignes),mod(j+1,nb_colonnes)) = sqrt(2);
        P(mod(i+1,nb_lignes),mod(j-1,nb_colonnes)) = sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss;
        P(mod(i+1,nb_lignes),mod(j,nb_colonnes)) = 1;
        P(mod(i-1,nb_lignes),mod(j,nb_colonnes)) = 1;
        P(mod(i,nb_lignes),mod(j-1,nb_colonnes)) = 1;
        P(mod(i,nb_lignes),mod(j+1,nb_colonnes)) = 1;
    end
end

% Positionnement du maitre-nageur :
disp('Positionnez le maitre-nageur en cliquant sur l''image !');
[j1,i1] = ginput(1);
j1 = round(j1);
i1 = round(i1);
plot(j1,i1,'or','MarkerFaceColor','r','MarkerSize',10,'LineWidth',4);
drawnow;

% Calcul des chemins optimaux par l'algorithme de Dijkstra :
% A completer
% ...

while true
	% Positionnement du noye :
	disp('Positionnez le noye en cliquant sur l''image !');
	[j2,i2] = ginput(1);
	j2 = round(j2);
	i2 = round(i2);
	plot(j2,i2,'xr','MarkerSize',10,'LineWidth',4);

	% Affichage du chemin optimal :
	% A completer et decommenter
	% chemin_optimal = ...
	% [i,j] = ...
	% plot(j,i,'-r','LineWidth',2);
end
